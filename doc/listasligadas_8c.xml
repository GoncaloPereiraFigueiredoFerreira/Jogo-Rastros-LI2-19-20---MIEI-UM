<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="listasligadas_8c" kind="file" language="C++">
    <compoundname>listasligadas.c</compoundname>
    <includes refid="listasligadas_8h" local="yes">listasligadas.h</includes>
    <incdepgraph>
      <node id="86">
        <label>stdlib.h</label>
      </node>
      <node id="83">
        <label>Projeto/listasligadas.c</label>
        <link refid="listasligadas_8c"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>listasligadas.h</label>
        <link refid="listasligadas_8h"/>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="listasligadas_8c_1a8f403bb8bb2ff4867bea5c3b4ae3b8bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlligada" kindref="compound">LISTA</ref></type>
        <definition>LISTA criarL</definition>
        <argsstring>()</argsstring>
        <name>criarL</name>
        <briefdescription>
<para>Cria uma lista. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/listasligadas.c" line="3" column="1" bodyfile="Projeto/listasligadas.c" bodystart="3" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="listasligadas_8c_1a064b66f2fa36898b6f5f82ccfb38dcef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlligada" kindref="compound">LISTA</ref></type>
        <definition>LISTA insereH</definition>
        <argsstring>(LISTA L, void *val)</argsstring>
        <name>insereH</name>
        <param>
          <type><ref refid="structlligada" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Insere um valor na cabeça da lista. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador do valor a ser inserido </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/listasligadas.c" line="10" column="1" bodyfile="Projeto/listasligadas.c" bodystart="10" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="listasligadas_8c_1a7a426870f12aee3b866685b2971b0787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* devolveH</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>devolveH</name>
        <param>
          <type><ref refid="structlligada" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Devolve o valor da cabeça da lista. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/listasligadas.c" line="21" column="1" bodyfile="Projeto/listasligadas.c" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="listasligadas_8c_1ad9380152361127432c55c1c6067e05ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlligada" kindref="compound">LISTA</ref></type>
        <definition>LISTA proximo</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>proximo</name>
        <param>
          <type><ref refid="structlligada" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Devolve o próximo valor da lista. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/listasligadas.c" line="25" column="1" bodyfile="Projeto/listasligadas.c" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="listasligadas_8c_1a70069e763001b14092476ee48d6aee58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlligada" kindref="compound">LISTA</ref></type>
        <definition>LISTA removeH</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>removeH</name>
        <param>
          <type><ref refid="structlligada" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Remove a cabeça da lista. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/listasligadas.c" line="28" column="1" bodyfile="Projeto/listasligadas.c" bodystart="28" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="listasligadas_8c_1ad1f112fb79400a6814c506e498c9b3fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sizeL</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>sizeL</name>
        <param>
          <type><ref refid="structlligada" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Devolve a tamanho da lista. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>lista </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/listasligadas.c" line="34" column="1" bodyfile="Projeto/listasligadas.c" bodystart="34" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="listasligadas_8c_1a2d9ffede1de9e074793fbe23bb37ca0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vazia</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>vazia</name>
        <param>
          <type><ref refid="structlligada" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Verifica se a lista está vazia. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/listasligadas.c" line="43" column="1" bodyfile="Projeto/listasligadas.c" bodystart="43" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="listasligadas_8h" kindref="compound">listasligadas.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="structlligada" kindref="compound">LISTA</ref><sp/><ref refid="listasligadas_8h_1a8f403bb8bb2ff4867bea5c3b4ae3b8bb" kindref="member">criarL</ref>(){</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlligada" kindref="compound">LISTA</ref><sp/>l<sp/>=<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structlligada" kindref="compound">Nodo</ref>));</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;valor<sp/>=NULL;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>l-&gt;prox<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="structlligada" kindref="compound">LISTA</ref><sp/><ref refid="listasligadas_8h_1a064b66f2fa36898b6f5f82ccfb38dcef" kindref="member">insereH</ref>(<ref refid="structlligada" kindref="compound">LISTA</ref><sp/>L,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*val){</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(L-&gt;prox<sp/>||<sp/>L-&gt;valor){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlligada" kindref="compound">LISTA</ref><sp/>x=<sp/><ref refid="listasligadas_8h_1a8f403bb8bb2ff4867bea5c3b4ae3b8bb" kindref="member">criarL</ref>();<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x-&gt;valor=val;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x-&gt;prox=L;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>L-&gt;valor=val;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>L;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="listasligadas_8h_1a7a426870f12aee3b866685b2971b0787" kindref="member">devolveH</ref>(<ref refid="structlligada" kindref="compound">LISTA</ref><sp/>L){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(L-&gt;valor);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="structlligada" kindref="compound">LISTA</ref><sp/><ref refid="listasligadas_8h_1ad9380152361127432c55c1c6067e05ae" kindref="member">proximo</ref>(<ref refid="structlligada" kindref="compound">LISTA</ref><sp/>L){</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(L-&gt;prox);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="structlligada" kindref="compound">LISTA</ref><sp/><ref refid="listasligadas_8h_1a70069e763001b14092476ee48d6aee58" kindref="member">removeH</ref>(<ref refid="structlligada" kindref="compound">LISTA</ref><sp/>L){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlligada" kindref="compound">LISTA</ref><sp/>a=L-&gt;prox;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(L);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="listasligadas_8h_1ad1f112fb79400a6814c506e498c9b3fa" kindref="member">sizeL</ref>(<ref refid="structlligada" kindref="compound">LISTA</ref><sp/>L){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(L)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>L=L-&gt;prox;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="listasligadas_8h_1a2d9ffede1de9e074793fbe23bb37ca0a" kindref="member">vazia</ref>(<ref refid="structlligada" kindref="compound">LISTA</ref><sp/>L){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(L)?0:1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Projeto/listasligadas.c"/>
  </compounddef>
</doxygen>

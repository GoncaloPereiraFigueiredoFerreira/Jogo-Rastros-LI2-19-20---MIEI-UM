<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dados_8c" kind="file" language="C++">
    <compoundname>dados.c</compoundname>
    <includes refid="dados_8h" local="yes">dados.h</includes>
    <incdepgraph>
      <node id="26">
        <label>stdlib.h</label>
      </node>
      <node id="24">
        <label>Projeto/dados.c</label>
        <link refid="dados_8c"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>dados.h</label>
        <link refid="dados_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>math.h</label>
      </node>
      <node id="28">
        <label>listasligadas.h</label>
        <link refid="listasligadas_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="dados_8c_1a64da8cb7611cf3d5aba6a4414a0abb92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void inicia</definition>
        <argsstring>(ESTADO *est)</argsstring>
        <name>inicia</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>est</declname>
        </param>
        <briefdescription>
<para>Função que coloca o estado na sua posição inicial. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>est</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/dados.c" line="3" column="1" bodyfile="Projeto/dados.c" bodystart="3" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="dados_8c_1a303cbcfe5e2680baf24b96075827b16e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void limpaArr</definition>
        <argsstring>(ESTADO *est, int i)</argsstring>
        <name>limpaArr</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>est</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Função que inicia o array de jogadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>est</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Local a partir do qual a função limpa o array </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/dados.c" line="14" column="1" bodyfile="Projeto/dados.c" bodystart="14" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="dados_8c_1aee107ab0b8442caeaac72be171f20fc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int check</definition>
        <argsstring>(ESTADO *est, COORDENADA c)</argsstring>
        <name>check</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>est</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Vê se é possivél fazer uma jogada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>est</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Jogada pretendida </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/dados.c" line="21" column="1" bodyfile="Projeto/dados.c" bodystart="21" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="dados_8c_1ac27ab41d705f6107cf34c5c3fbf8bf2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlligada" kindref="compound">LISTA</ref></type>
        <definition>LISTA jogPoss</definition>
        <argsstring>(ESTADO *est)</argsstring>
        <name>jogPoss</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>est</declname>
        </param>
        <briefdescription>
<para>Função que cria uma lista ligada das possiveis jogadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Apontador</parametername>
</parameternamelist>
<parameterdescription>
<para>para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/dados.c" line="30" column="1" bodyfile="Projeto/dados.c" bodystart="30" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="dados_8c_1a74469889c470bfe2bc9d32d65e851313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int movs</definition>
        <argsstring>(ESTADO *est, COORDENADA mvs[8])</argsstring>
        <name>movs</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>est</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>mvs</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Dá o numero de jogadas possiveis e enche o array com essas jogadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>est</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mvs</parametername>
</parameternamelist>
<parameterdescription>
<para>Array onde as jogadas possivéis ficaram guardadas </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/dados.c" line="49" column="1" bodyfile="Projeto/dados.c" bodystart="49" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="dados_8c_1a2a73885e5d652f9186c670e43cbc741b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verificaFim</definition>
        <argsstring>(ESTADO *est)</argsstring>
        <name>verificaFim</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>est</declname>
        </param>
        <briefdescription>
<para>Verifica se algum dos jogadores já ganhou. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>est</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para estado </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/dados.c" line="63" column="1" bodyfile="Projeto/dados.c" bodystart="63" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="dados_8c_1a7c119b132d591342cecf42ca1d64e39b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA jog</definition>
        <argsstring>(ESTADO *est)</argsstring>
        <name>jog</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>est</declname>
        </param>
        <briefdescription>
<para>Função que retorna um jogada possivel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>est</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/dados.c" line="75" column="1" bodyfile="Projeto/dados.c" bodystart="75" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="dados_8c_1a75c0c242b6cefa2bfbec1297a3228023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dist1</definition>
        <argsstring>(COORDENADA *a)</argsstring>
        <name>dist1</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/dados.c" line="88" column="1" bodyfile="Projeto/dados.c" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="dados_8c_1aea7a5f8f2b2fca969f836448ea8a469c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA jog2</definition>
        <argsstring>(ESTADO *est)</argsstring>
        <name>jog2</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>est</declname>
        </param>
        <briefdescription>
<para>Função que retorna uma jogada possivél com uma estratégia diferente à jog. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>est</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Projeto/dados.c" line="92" column="1" bodyfile="Projeto/dados.c" bodystart="92" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dados_8h" kindref="compound">dados.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dados_8h_1a64da8cb7611cf3d5aba6a4414a0abb92" kindref="member">inicia</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*est){<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;i&lt;8;i++)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;j&lt;8;j++)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>est-&gt;<ref refid="structESTADO_1ab56f0f1be16954d3768b4174d14c087d" kindref="member">tab</ref>[i][j]<sp/>=<sp/>VAZIO;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>est-&gt;<ref refid="structESTADO_1ab1bb13e4a70f2464766c57e64b9c78f9" kindref="member">pos</ref>.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>est-&gt;<ref refid="structESTADO_1ab1bb13e4a70f2464766c57e64b9c78f9" kindref="member">pos</ref>.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>est-&gt;<ref refid="structESTADO_1ab56f0f1be16954d3768b4174d14c087d" kindref="member">tab</ref>[4][3]<sp/>=<sp/>BRANCA;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>est-&gt;<ref refid="structESTADO_1a261495728744647e618b4e623f5a4b7a" kindref="member">num_jogadas</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>est-&gt;<ref refid="structESTADO_1a5dd28e2e68b7aef2b6b7ea88e02eff58" kindref="member">jogador_atual</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dados_8h_1a303cbcfe5e2680baf24b96075827b16e" kindref="member">limpaArr</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*est,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;i&lt;64;i++){</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>est-&gt;<ref refid="structESTADO_1afae43b87a488fad0f2b56a18bad31d18" kindref="member">jogadas</ref>[i].x<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>est-&gt;<ref refid="structESTADO_1afae43b87a488fad0f2b56a18bad31d18" kindref="member">jogadas</ref>[i].y<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dados_8h_1aee107ab0b8442caeaac72be171f20fc1" kindref="member">check</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*est,<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>est-&gt;<ref refid="structESTADO_1ab1bb13e4a70f2464766c57e64b9c78f9" kindref="member">pos</ref>.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>est-&gt;<ref refid="structESTADO_1ab1bb13e4a70f2464766c57e64b9c78f9" kindref="member">pos</ref>.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>c.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>c.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dados_8h_1aba91601f16d4c485b2d9b8c429f27039" kindref="member">CASA</ref><sp/>novaCasa<sp/>=<sp/>est-&gt;<ref refid="structESTADO_1ab56f0f1be16954d3768b4174d14c087d" kindref="member">tab</ref>[x][y];<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(abs(x1-x)&lt;=1<sp/>&amp;&amp;<sp/>abs(y1-y)&lt;=1<sp/>&amp;&amp;<sp/>novaCasa<sp/>!=<sp/>BRANCA<sp/>&amp;&amp;<sp/>novaCasa<sp/>!=<sp/>PRETA);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="structlligada" kindref="compound">LISTA</ref><sp/><ref refid="dados_8h_1ac27ab41d705f6107cf34c5c3fbf8bf2e" kindref="member">jogPoss</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*est){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>est-&gt;<ref refid="structESTADO_1ab1bb13e4a70f2464766c57e64b9c78f9" kindref="member">pos</ref>.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref>,<sp/>y<sp/>=<sp/>est-&gt;<ref refid="structESTADO_1ab1bb13e4a70f2464766c57e64b9c78f9" kindref="member">pos</ref>.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,i1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c,*c1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlligada" kindref="compound">LISTA</ref><sp/>l<sp/>=<sp/><ref refid="listasligadas_8h_1a8f403bb8bb2ff4867bea5c3b4ae3b8bb" kindref="member">criarL</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>-1;i<sp/>&lt;<sp/>2;i++)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i1<sp/>=<sp/>-1;<sp/>i1<sp/>&lt;<sp/>2;i1++){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref><sp/>=<sp/>x+i;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref><sp/>=<sp/>y+i1;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>c.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>c.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref><sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>c.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref><sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1aee107ab0b8442caeaac72be171f20fc1" kindref="member">check</ref>(est,c)){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref>));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1-&gt;<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref><sp/>=<sp/>c.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1-&gt;<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref><sp/>=<sp/>c.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/><ref refid="listasligadas_8h_1a064b66f2fa36898b6f5f82ccfb38dcef" kindref="member">insereH</ref>(l,c1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dados_8h_1a74469889c470bfe2bc9d32d65e851313" kindref="member">movs</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*est,<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>mvs[8]){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>est-&gt;<ref refid="structESTADO_1ab1bb13e4a70f2464766c57e64b9c78f9" kindref="member">pos</ref>.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref>,<sp/>y<sp/>=<sp/>est-&gt;<ref refid="structESTADO_1ab1bb13e4a70f2464766c57e64b9c78f9" kindref="member">pos</ref>.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,i1,n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>-1;i<sp/>&lt;<sp/>2;i++)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i1<sp/>=<sp/>-1;<sp/>i1<sp/>&lt;<sp/>2;i1++){</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref><sp/>=<sp/>x+i;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref><sp/>=<sp/>y+i1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x+i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>y+i1<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>x+i<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/>y+i1<sp/>&lt;<sp/>8<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1aee107ab0b8442caeaac72be171f20fc1" kindref="member">check</ref>(est,c))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvs[n++]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dados_8h_1a2a73885e5d652f9186c670e43cbc741b" kindref="member">verificaFim</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*est){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogadorAtual<sp/>=<sp/>est-&gt;<ref refid="structESTADO_1a5dd28e2e68b7aef2b6b7ea88e02eff58" kindref="member">jogador_atual</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>atual<sp/>=<sp/>est-&gt;<ref refid="structESTADO_1ab1bb13e4a70f2464766c57e64b9c78f9" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>atual.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref>,<sp/>lin<sp/>=<sp/>atual.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>vizinhos[8];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>caso=0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>lin<sp/>==<sp/>7)<sp/>caso<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/>7<sp/>&amp;&amp;<sp/>lin<sp/>==<sp/>0)<sp/>caso<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dados_8h_1a74469889c470bfe2bc9d32d65e851313" kindref="member">movs</ref>(est,vizinhos)<sp/>==<sp/>0)<sp/>caso<sp/>=<sp/>(jogadorAtual<sp/>%<sp/>2)<sp/>+1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>caso;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="dados_8h_1a7c119b132d591342cecf42ca1d64e39b" kindref="member">jog</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*est){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*c,c1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlligada" kindref="compound">LISTA</ref><sp/>l<sp/>=<sp/><ref refid="dados_8h_1ac27ab41d705f6107cf34c5c3fbf8bf2e" kindref="member">jogPoss</ref>(est);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(l-&gt;valor);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>c1.<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref><sp/>=<sp/>c-&gt;<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>c1.<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref><sp/>=<sp/>c-&gt;<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref>;<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="listasligadas_8h_1a2d9ffede1de9e074793fbe23bb37ca0a" kindref="member">vazia</ref>(l)){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(l-&gt;valor);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/><ref refid="listasligadas_8h_1a70069e763001b14092476ee48d6aee58" kindref="member">removeH</ref>(l);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist1<sp/>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*a){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sqrt<sp/>(<sp/>pow(7-(a-&gt;<ref refid="structCOORDENADA_1a04df39e5db6a15fc3891becabc22fbe2" kindref="member">x</ref>),2)<sp/>+<sp/>pow(0-(a-&gt;<ref refid="structCOORDENADA_1a5d8fd9d119daf634ccd5ff7b8b37d16b" kindref="member">y</ref>),2)));<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="dados_8h_1aea7a5f8f2b2fca969f836448ea8a469c" kindref="member">jog2</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*est){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlligada" kindref="compound">LISTA</ref><sp/>L<sp/>=<sp/><ref refid="dados_8h_1ac27ab41d705f6107cf34c5c3fbf8bf2e" kindref="member">jogPoss</ref>(est);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*c,<sp/>c1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(L-&gt;valor);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>c1=*c;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>dist1<sp/>(&amp;est-&gt;<ref refid="structESTADO_1ab1bb13e4a70f2464766c57e64b9c78f9" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(L){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(est-&gt;<ref refid="structESTADO_1a5dd28e2e68b7aef2b6b7ea88e02eff58" kindref="member">jogador_atual</ref><sp/>==<sp/>1<sp/>&amp;&amp;<sp/>dist1(c)&gt;a){</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1=*c;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=dist1(c);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(est-&gt;<ref refid="structESTADO_1a5dd28e2e68b7aef2b6b7ea88e02eff58" kindref="member">jogador_atual</ref><sp/>==<sp/>2<sp/>&amp;&amp;<sp/>dist1(c)&lt;a){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1=*c;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=dist1(c);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L=L-&gt;prox;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(L)<sp/>c=L-&gt;valor;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c1;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="124"><highlight class="comment">COORDENADA<sp/>jog2(ESTADO<sp/>*est){</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/>LISTA<sp/>L<sp/>=<sp/>jogPoss(est);</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>i<sp/>=<sp/>sizeL(L);</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/>COORDENADA<sp/>*c,c1,c2;</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>L-&gt;valor;</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/>c1.x<sp/>=<sp/>c2.x<sp/>=<sp/>c-&gt;x;</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/>c1.y<sp/>=<sp/>c2.y<sp/>=<sp/>c-&gt;y;</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(est-&gt;jogador_atual==1){</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(L-&gt;prox){</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(c1.x<sp/>+<sp/>c1.y<sp/>&lt;=<sp/>c2.x<sp/>+<sp/>c2.y)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c2.x<sp/>=<sp/>c1.x;</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c2.y<sp/>=<sp/>c1.y;</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>L-&gt;prox;</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>L-&gt;valor;</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1.x=c-&gt;x;</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1.y=c-&gt;y;</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/>else<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(L-&gt;prox){</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((c1.x+c1.y)&gt;=(c2.x+c2.y)){</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c2.x<sp/>=<sp/>c1.x;</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c2.y<sp/>=<sp/>c1.y;</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>L-&gt;prox;</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>L-&gt;valor;</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1.x=c-&gt;x;</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1.y=c-&gt;y;</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>(!vazia(L)){</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(L-&gt;valor);</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>removeH(L);</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>c2;</highlight></codeline>
<codeline lineno="160"><highlight class="comment">}</highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">*/</highlight></codeline>
    </programlisting>
    <location file="Projeto/dados.c"/>
  </compounddef>
</doxygen>
